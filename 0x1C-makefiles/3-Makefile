# Makefile for 'school' executable

# Compiler
CC = gcc

# Source files
SRC = main.c utils.c foo.c bar.c

# Object files
OBJ = $(SRC:.c=.o)

# Executable name
NAME = school

# Program to delete files
RM = rm -f

# Compilation flags
CFLAGS = -Wall -O2

# Default rule
all: $(NAME)

# Rule to build the executable
$(NAME): $(OBJ)
	$(CC) $(CFLAGS) $^ -o $@

# Rule to clean Emacs and Vim temporary files, the executable, and object files
fclean: clean
	$(RM) $(NAME)

# Rule to clean object files
oclean:
	$(RM) $(OBJ)

# Rule to clean Emacs and Vim temporary files
clean:
	$(RM) *~ \#*#

# Rule to force recompilation of all source files
re: fclean all

# Pattern rule to build object files from source files
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

# Phony targets
.PHONY: all clean oclean fclean re
